{"version":3,"sources":["Editor.js","Preview.js","App.js","reportWebVitals.js","index.js"],"names":["Editor","className","id","onChange","this","props","inputHandler","value","currentValue","type","React","Component","inLineStyle","overflow","overflowY","Preview","markdown","parse","marked","style","App","e","setState","input","target","state","bind","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAEqBA,E,4JAEjB,WACI,OACI,sBAAKC,UAAU,SAAf,UACI,oBAAIA,UAAU,cAAd,oBACA,0BAAUC,GAAG,SAASC,SAAUC,KAAKC,MAAMC,aACvCC,MAAOH,KAAKC,MAAMG,aAAcP,UAAU,YAAYQ,KAAK,qB,GAP3CC,IAAMC,W,yBCEpCC,EAAc,CAChBC,SAAU,SACVC,UAAW,UAGMC,E,4JAEjB,WACI,IAAMC,EAAWC,YAAMC,IAAOd,KAAKC,MAAMG,eAEzC,OACI,sBAAKP,UAAU,UAAf,UACI,oBAAIA,UAAU,cAAd,uBACA,qBAAKkB,MAAOP,EAAaV,GAAG,UAAUD,UAAU,YAAYQ,KAAK,YAAjE,SAA8EO,W,GARzDN,IAAMC,WCwB5BS,E,kDA1Bb,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IASRC,aAAe,SAACe,GACd,EAAKC,SAAS,CACZC,MAAOF,EAAEG,OAAOjB,SATlB,EAAKkB,MAAQ,CACXF,MAAO,IAGT,EAAKjB,aAAe,EAAKA,aAAaoB,KAAlB,gBAPH,E,0CAgBnB,WACE,OACE,sBAAKzB,UAAU,MAAf,UACE,cAAC,EAAD,CAAQK,aAAcF,KAAKE,aAAcE,aAAcJ,KAAKqB,MAAMF,QAClE,cAAC,EAAD,CAASf,aAAcJ,KAAKqB,MAAMF,e,GArBxBb,IAAMC,WCMTgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.14e9731d.chunk.js","sourcesContent":["import React from 'react'\n\nexport default class Editor extends React.Component{\n\n    render() {\n        return (\n            <div className=\"Editor\">\n                <h2 className=\"text-header\">Editor</h2>\n                <textarea id=\"editor\" onChange={this.props.inputHandler}\n                    value={this.props.currentValue} className=\"text-area\" type='text-area' />\n            </div>\n        )\n    }\n}","import React from 'react'\nimport marked from 'marked'\nimport parse from 'html-react-parser'\n\nconst inLineStyle = {\n    overflow: 'hidden',\n    overflowY: 'scroll'\n}\n\nexport default class Preview extends React.Component {\n\n    render() {\n        const markdown = parse(marked(this.props.currentValue))\n\n        return (\n            <div className=\"Preview\">\n                <h2 className=\"text-header\">Previewer</h2>\n                <div style={inLineStyle} id=\"preview\" className=\"text-area\" type='text-area'>{markdown}</div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport Editor from './Editor.js'\nimport Preview from './Preview.js'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      input: ''\n    }\n\n    this.inputHandler = this.inputHandler.bind(this)\n  }\n\n  inputHandler = (e) => {\n    this.setState({\n      input: e.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <Editor inputHandler={this.inputHandler} currentValue={this.state.input} />\n        <Preview currentValue={this.state.input} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}